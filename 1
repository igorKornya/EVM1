#include <iostream>
#include <locale>
#include <conio.h>
#include <windows.h>
#include <string>
#include <bitset>
#include <cstdint>
using namespace std;
//long - 32, double - 64

void printMenu(int op)
{
    cout << "1. long" << (op == 1 ? "<--" : "") << endl;
    cout << "2. double" << (op == 2 ? "<--" : "") << endl;
    cout << "Выход(нажмите ESC)" << endl;
}

void printBinary(long num) {
    cout << "Двоичное представление числа: " << std::bitset<32>(num) << endl;
}

uint32_t cyclic_shift(uint32_t N, const std::string& direction, int K, int M, int start_bit) {
    uint32_t mask = ((1 << M) - 1) << start_bit;

    uint32_t original_group = (N & mask) >> start_bit;

    K = K % M;

    uint32_t shifted_group;
    if (direction == "right") {
        shifted_group = ((original_group >> K) | (original_group << (M - K))) & ((1 << M) - 1);
    }
    else if (direction == "left") {
        shifted_group = ((original_group << K) | (original_group >> (M - K))) & ((1 << M) - 1);
    }

    N = (N & ~mask) | (shifted_group << start_bit);

    return N;
}

uint64_t cyclic_shift_double(uint64_t N, const std::string& direction, int K, int M, int start_bit) {
    uint64_t mask = ((1ULL << M) - 1) << start_bit;

    uint64_t original_group = (N & mask) >> start_bit;

    K = K % M;

    uint64_t shifted_group;
    if (direction == "right") {
        shifted_group = ((original_group >> K) | (original_group << (M - K))) & ((1ULL << M) - 1);
    }
    else if (direction == "left") {
        shifted_group = ((original_group << K) | (original_group >> (M - K))) & ((1ULL << M) - 1);
    }
    else {
        std::cerr << "Ошибка: неверное направление сдвига." << std::endl;
        return N;
    }

    N = (N & ~mask) | (shifted_group << start_bit);

    return N;
}

union DoubleBits {
    double d;
    uint64_t bits;
};

void doubleBinary(double num)
{
    union {
        double d;
        uint64_t u;
    } doubleUnion;

    doubleUnion.d = num;

    uint64_t bits = doubleUnion.u;

    uint64_t sign = (bits >> 63) & 1;

    uint64_t exponent = (bits >> 52) & 0x7ff;

    uint64_t mantissa = bits & 0xFFFFFFFFFFFFF;

    cout << sign << " ";
    for (int i = 10; i >= 0; --i)
    {
        std::cout << ((exponent >> i) & 1);
        cout << " ";
    }

    for (int i = 51; i >= 0; --i)
    {
        std::cout << ((mantissa >> i) & 1);
        cout << " ";
    }
    std::cout << std::endl;
}



void clearScreen()
{
    system("cls");
}

int main()
{
    bool repeat = true;
    setlocale(LC_ALL, "Ru");
    char ch;
    bool tr = 1;
    int op = 1;

    while (tr)
    {
        clearScreen();
        printMenu(op);

        ch = _getch();
        if (ch == 27)
        {
            tr = false;
            break;
        }
        else if (ch == 13)
        {
            if (op == 1)
            {
                system("cls");
                cout << "Введите число (long):" << endl;
                long a;
                cin >> a;

                if (std::cin.fail())
                {
                    std::cin.clear();
                    std::cin.ignore(65536, '\n');
                    cout << "Введены не числа" << endl;
                    system("pause");
                }

                else
                {
                    printBinary(a);

                    cout << "Выберите сторону сдвига: лево/право (0/1)" << endl;
                    bool choice;
                    cin >> choice;
                    if (std::cin.fail() || choice < 0 || choice > 1)
                    {
                        std::cin.clear();
                        std::cin.ignore(65536, '\n');
                        cout << "Введены не числа либо число не удовлетворяет условию ввода." << endl;
                        system("pause");
                    }
                    else
                    {
                        int s;
                        cout << "На сколько будем сдвигать? " << endl;
                        cin >> s;
                        if (std::cin.fail() || s < 0 || s > 31)
                        {
                            std::cin.clear();
                            std::cin.ignore(65536, '\n');
                            cout << "Введены не числа либо число не удовлетворяет условию ввода." << endl;
                            system("pause");
                        }
                        else
                        {
                            int r;
                            cout << "Введите количество рязрядов в группе: ";
                            cin >> r;
                            if (std::cin.fail() || r < 0 || r > 31)
                            {
                                std::cin.clear();
                                std::cin.ignore(65536, '\n');
                                cout << "Введены не числа либо число не удовлетворяет условию ввода." << endl;
                                system("pause");
                            }
                            else
                            {
                                int n;
                                cout << "Введите номер бита с которого двигать.(0-31)" << endl;
                                cin >> n;
                                if (std::cin.fail() || n < 0 || n > 31)
                                {
                                    std::cin.clear();
                                    std::cin.ignore(65536, '\n');
                                    cout << "Введены не числа либо число не удовлетворяет условию ввода." << endl;
                                    system("pause");
                                }
                                else
                                {
                                    if (!choice)
                                    {
                                        string ourChoice = "left";
                                        uint32_t result = cyclic_shift(a, ourChoice, s, r, n);
                                        cout << "До преобразования:    " << std::bitset<32>(a) << endl;
                                        cout << "После преобразования: " << std::bitset<32>(result) << endl;
                                        system("pause");

                                    }
                                    else
                                    {
                                        string ourChoice = "right";
                                        uint32_t result = cyclic_shift(a, ourChoice, s, r, n);
                                        cout << "До преобразования:    " << std::bitset<32>(a) << endl;
                                        cout << "После преобразования: " << std::bitset<32>(result) << endl;
                                        system("pause");
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (op == 2)
            {
                double a;

                cout << "Введите число" << endl;
                cin >> a;

                if (std::cin.fail())
                {
                    std::cin.clear();
                    std::cin.ignore(65536, '\n');
                    cout << "Введены не числа" << endl;
                    system("pause");
                }
                else
                {
                    cout << "Двоичное представление числа:" << endl;
                    doubleBinary(a);

                    cout << "Выберите сторону сдвига лево/право(0/1)" << endl;
                    bool choice;
                    cin >> choice;
                    if (std::cin.fail() || choice < 0 || choice > 1)
                    {
                        std::cin.clear();
                        std::cin.ignore(65536, '\n');
                        cout << "Введены не числа либо число не удовлетворяет условию ввода." << endl;
                        system("pause");
                    }
                    else
                    {
                        int n;
                        cout << "Введите номер бита с которого двигать.(0-63)" << endl;
                        cin >> n;
                        if (std::cin.fail() || n < 0 || n > 63)
                        {
                            std::cin.clear();
                            std::cin.ignore(65536, '\n');
                            cout << "Введены не числа либо число не удовлетворяет условию ввода." << endl;
                            system("pause");
                        }
                        else
                        {
                            int s;
                            cout << "На сколько будем сдвигать? " << endl;
                            cin >> s;
                            if (std::cin.fail() || s < 0 || s > 31)
                            {
                                std::cin.clear();
                                std::cin.ignore(65536, '\n');
                                cout << "Введены не числа либо число не удовлетворяет условию ввода." << endl;
                                system("pause");
                            }
                            else
                            {
                                int r;
                                cout << "Введите количество разрядов для сдвига(0-63): ";
                                cin >> r;
                                if (std::cin.fail() || r < 0 || r > 63)
                                {
                                    std::cin.clear();
                                    std::cin.ignore(65536, '\n');
                                    cout << "Введены не числа либо число не удовлетворяет условию ввода." << endl;
                                    system("pause");
                                }
                                else
                                {
                                    if (!choice)
                                    {
                                        string ourChoice = "left";
                                        DoubleBits db;
                                        db.d = a;
                                        cout << "До преобразования:    " << std::bitset<64>(db.bits) << endl;
                                        db.bits = cyclic_shift_double(db.bits, ourChoice, s, r, n);
                                        cout << "После преобразования: " << std::bitset<64>(db.bits) << endl;
                                        system("pause");

                                    }
                                    else
                                    {
                                        string ourChoice = "right";
                                        DoubleBits db;
                                        db.d = a;
                                        cout << "До преобразования:    " << std::bitset<64>(db.bits) << endl;
                                        db.bits = cyclic_shift_double(db.bits, ourChoice, s, r, n);
                                        cout << "После преобразования: " << std::bitset<64>(db.bits) << endl;
                                        system("pause");
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        else if (ch >= '1' && ch <= '7')
        {
            op = ch - '0';
        }

        else if (GetAsyncKeyState(VK_UP) && op > 1)
        {
            op--;
        }
        else if (GetAsyncKeyState(VK_DOWN) && op < 2)
        {
            op++;
        }
    }

    return 0;
}

